syntax = "proto3";

option go_package = "./pb";

service NecoWalletCenter {
  rpc UpdateUserERC20Wallet (UpdateUserERC20WalletRequest) returns (UpdateUserERC20WalletResponse) {}
  rpc UpdateUserERC1155Wallet (UpdateUserERC1155WalletRequest) returns (UpdateUserERC1155WalletResponse) {}
  rpc GetUserERC20Wallet (GetUserERC20WalletRequest) returns (GetUserERC20WalletResponse) {}
  rpc GetUserERC1155Wallet (GetUserERC1155WalletRequest) returns (GetUserERC1155WalletResponse) {}
}

message UpdateUserERC20WalletRequest {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
  string BusinessModule = 4;
  WalletActionType ActionType = 5;
  ERC20Token Token = 6;
  float Value = 7;
  ActionStatus Status = 8;
}

message UpdateUserERC20WalletResponse {
  ActionStatus ActionStatus = 1;
  GetUserERC20WalletResponse ERC20Wallet = 2;
}

message UpdateUserERC1155WalletRequest {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
  string BusinessModule = 4;
  WalletActionType ActionType = 5;
  repeated int64 Ids = 6;
  repeated int64 Values = 7;
  ActionStatus Status = 8;
}

message UpdateUserERC1155WalletResponse {
  ActionStatus ActionStatus = 1;
  GetUserERC1155WalletResponse ERC1155Wallet = 2;
}

message GetUserERC20WalletRequest {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
}

message GetUserERC20WalletResponse {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
  repeated ERC20TokenData TokenData = 4;
}

message GetUserERC1155WalletRequest {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
}

message GetUserERC1155WalletResponse {
  string AccountId = 1;
  string PublicAddress = 2;
  GameClient GameClient = 3;
  repeated int64 Ids = 4;
  repeated int64 Amounts = 5;
}

message ERC20TokenData {
  ERC20Token Token = 1;
  string Balance = 2;
}

enum GameClient {
  NecoFishing = 0;
  NecoLand = 1;
}

enum ERC20Token {
  NFISH = 0;
  BUSD = 1;
}

enum WalletActionType {
  Income = 0;
  Spend = 1;
  Deposit = 3;
  Withdraw = 4;
}

enum ActionStatus {
  Pending = 0;
  Succeed = 1;
  Failed = 2;
}


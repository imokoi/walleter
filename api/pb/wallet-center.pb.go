// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: wallet-center.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameClient int32

const (
	GameClient_NecoFishing GameClient = 0
	GameClient_NecoLand    GameClient = 1
)

// Enum value maps for GameClient.
var (
	GameClient_name = map[int32]string{
		0: "NecoFishing",
		1: "NecoLand",
	}
	GameClient_value = map[string]int32{
		"NecoFishing": 0,
		"NecoLand":    1,
	}
)

func (x GameClient) Enum() *GameClient {
	p := new(GameClient)
	*p = x
	return p
}

func (x GameClient) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameClient) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_center_proto_enumTypes[0].Descriptor()
}

func (GameClient) Type() protoreflect.EnumType {
	return &file_wallet_center_proto_enumTypes[0]
}

func (x GameClient) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameClient.Descriptor instead.
func (GameClient) EnumDescriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{0}
}

type ERC20Token int32

const (
	ERC20Token_NFISH ERC20Token = 0
	ERC20Token_BUSD  ERC20Token = 1
)

// Enum value maps for ERC20Token.
var (
	ERC20Token_name = map[int32]string{
		0: "NFISH",
		1: "BUSD",
	}
	ERC20Token_value = map[string]int32{
		"NFISH": 0,
		"BUSD":  1,
	}
)

func (x ERC20Token) Enum() *ERC20Token {
	p := new(ERC20Token)
	*p = x
	return p
}

func (x ERC20Token) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERC20Token) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_center_proto_enumTypes[1].Descriptor()
}

func (ERC20Token) Type() protoreflect.EnumType {
	return &file_wallet_center_proto_enumTypes[1]
}

func (x ERC20Token) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ERC20Token.Descriptor instead.
func (ERC20Token) EnumDescriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{1}
}

type WalletActionType int32

const (
	WalletActionType_Income   WalletActionType = 0
	WalletActionType_Spend    WalletActionType = 1
	WalletActionType_Deposit  WalletActionType = 3
	WalletActionType_Withdraw WalletActionType = 4
)

// Enum value maps for WalletActionType.
var (
	WalletActionType_name = map[int32]string{
		0: "TotalIncome",
		1: "Spend",
		3: "Deposit",
		4: "Withdraw",
	}
	WalletActionType_value = map[string]int32{
		"TotalIncome":   0,
		"Spend":    1,
		"Deposit":  3,
		"Withdraw": 4,
	}
)

func (x WalletActionType) Enum() *WalletActionType {
	p := new(WalletActionType)
	*p = x
	return p
}

func (x WalletActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_center_proto_enumTypes[2].Descriptor()
}

func (WalletActionType) Type() protoreflect.EnumType {
	return &file_wallet_center_proto_enumTypes[2]
}

func (x WalletActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletActionType.Descriptor instead.
func (WalletActionType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{2}
}

type ActionStatus int32

const (
	ActionStatus_Pending ActionStatus = 0
	ActionStatus_Succeed ActionStatus = 1
	ActionStatus_Failed  ActionStatus = 2
)

// Enum value maps for ActionStatus.
var (
	ActionStatus_name = map[int32]string{
		0: "Pending",
		1: "Succeed",
		2: "Failed",
	}
	ActionStatus_value = map[string]int32{
		"Pending": 0,
		"Succeed": 1,
		"Failed":  2,
	}
)

func (x ActionStatus) Enum() *ActionStatus {
	p := new(ActionStatus)
	*p = x
	return p
}

func (x ActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_center_proto_enumTypes[3].Descriptor()
}

func (ActionStatus) Type() protoreflect.EnumType {
	return &file_wallet_center_proto_enumTypes[3]
}

func (x ActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionStatus.Descriptor instead.
func (ActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{3}
}

type UpdateUserERC20WalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      string           `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress  string           `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient     GameClient       `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
	BusinessModule string           `protobuf:"bytes,4,opt,name=BusinessModule,proto3" json:"BusinessModule,omitempty"`
	ActionType     WalletActionType `protobuf:"varint,5,opt,name=ActionType,proto3,enum=WalletActionType" json:"ActionType,omitempty"`
	Token          ERC20Token       `protobuf:"varint,6,opt,name=Token,proto3,enum=ERC20Token" json:"Token,omitempty"`
	Value          float32          `protobuf:"fixed32,7,opt,name=Value,proto3" json:"Value,omitempty"`
	Status         ActionStatus     `protobuf:"varint,8,opt,name=Status,proto3,enum=ActionStatus" json:"Status,omitempty"`
}

func (x *UpdateUserERC20WalletRequest) Reset() {
	*x = UpdateUserERC20WalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserERC20WalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserERC20WalletRequest) ProtoMessage() {}

func (x *UpdateUserERC20WalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserERC20WalletRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserERC20WalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateUserERC20WalletRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateUserERC20WalletRequest) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *UpdateUserERC20WalletRequest) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

func (x *UpdateUserERC20WalletRequest) GetBusinessModule() string {
	if x != nil {
		return x.BusinessModule
	}
	return ""
}

func (x *UpdateUserERC20WalletRequest) GetActionType() WalletActionType {
	if x != nil {
		return x.ActionType
	}
	return WalletActionType_Income
}

func (x *UpdateUserERC20WalletRequest) GetToken() ERC20Token {
	if x != nil {
		return x.Token
	}
	return ERC20Token_NFISH
}

func (x *UpdateUserERC20WalletRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UpdateUserERC20WalletRequest) GetStatus() ActionStatus {
	if x != nil {
		return x.Status
	}
	return ActionStatus_Pending
}

type UpdateUserERC20WalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionStatus ActionStatus                `protobuf:"varint,1,opt,name=ActionStatus,proto3,enum=ActionStatus" json:"ActionStatus,omitempty"`
	ERC20Wallet  *GetUserERC20WalletResponse `protobuf:"bytes,2,opt,name=ERC20Wallet,proto3" json:"ERC20Wallet,omitempty"`
}

func (x *UpdateUserERC20WalletResponse) Reset() {
	*x = UpdateUserERC20WalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserERC20WalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserERC20WalletResponse) ProtoMessage() {}

func (x *UpdateUserERC20WalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserERC20WalletResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserERC20WalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserERC20WalletResponse) GetActionStatus() ActionStatus {
	if x != nil {
		return x.ActionStatus
	}
	return ActionStatus_Pending
}

func (x *UpdateUserERC20WalletResponse) GetERC20Wallet() *GetUserERC20WalletResponse {
	if x != nil {
		return x.ERC20Wallet
	}
	return nil
}

type UpdateUserERC1155WalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      string           `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress  string           `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient     GameClient       `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
	BusinessModule string           `protobuf:"bytes,4,opt,name=BusinessModule,proto3" json:"BusinessModule,omitempty"`
	ActionType     WalletActionType `protobuf:"varint,5,opt,name=ActionType,proto3,enum=WalletActionType" json:"ActionType,omitempty"`
	Ids            []int64          `protobuf:"varint,6,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	Values         []int64          `protobuf:"varint,7,rep,packed,name=Values,proto3" json:"Values,omitempty"`
	Status         ActionStatus     `protobuf:"varint,8,opt,name=Status,proto3,enum=ActionStatus" json:"Status,omitempty"`
}

func (x *UpdateUserERC1155WalletRequest) Reset() {
	*x = UpdateUserERC1155WalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserERC1155WalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserERC1155WalletRequest) ProtoMessage() {}

func (x *UpdateUserERC1155WalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserERC1155WalletRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserERC1155WalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserERC1155WalletRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateUserERC1155WalletRequest) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *UpdateUserERC1155WalletRequest) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

func (x *UpdateUserERC1155WalletRequest) GetBusinessModule() string {
	if x != nil {
		return x.BusinessModule
	}
	return ""
}

func (x *UpdateUserERC1155WalletRequest) GetActionType() WalletActionType {
	if x != nil {
		return x.ActionType
	}
	return WalletActionType_Income
}

func (x *UpdateUserERC1155WalletRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateUserERC1155WalletRequest) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UpdateUserERC1155WalletRequest) GetStatus() ActionStatus {
	if x != nil {
		return x.Status
	}
	return ActionStatus_Pending
}

type UpdateUserERC1155WalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionStatus  ActionStatus                  `protobuf:"varint,1,opt,name=ActionStatus,proto3,enum=ActionStatus" json:"ActionStatus,omitempty"`
	ERC1155Wallet *GetUserERC1155WalletResponse `protobuf:"bytes,2,opt,name=ERC1155Wallet,proto3" json:"ERC1155Wallet,omitempty"`
}

func (x *UpdateUserERC1155WalletResponse) Reset() {
	*x = UpdateUserERC1155WalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserERC1155WalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserERC1155WalletResponse) ProtoMessage() {}

func (x *UpdateUserERC1155WalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserERC1155WalletResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserERC1155WalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserERC1155WalletResponse) GetActionStatus() ActionStatus {
	if x != nil {
		return x.ActionStatus
	}
	return ActionStatus_Pending
}

func (x *UpdateUserERC1155WalletResponse) GetERC1155Wallet() *GetUserERC1155WalletResponse {
	if x != nil {
		return x.ERC1155Wallet
	}
	return nil
}

type GetUserERC20WalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string     `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress string     `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient    GameClient `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
}

func (x *GetUserERC20WalletRequest) Reset() {
	*x = GetUserERC20WalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserERC20WalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserERC20WalletRequest) ProtoMessage() {}

func (x *GetUserERC20WalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserERC20WalletRequest.ProtoReflect.Descriptor instead.
func (*GetUserERC20WalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserERC20WalletRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetUserERC20WalletRequest) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *GetUserERC20WalletRequest) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

type GetUserERC20WalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string            `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress string            `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient    GameClient        `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
	TokenData     []*ERC20TokenData `protobuf:"bytes,4,rep,name=TokenData,proto3" json:"TokenData,omitempty"`
}

func (x *GetUserERC20WalletResponse) Reset() {
	*x = GetUserERC20WalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserERC20WalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserERC20WalletResponse) ProtoMessage() {}

func (x *GetUserERC20WalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserERC20WalletResponse.ProtoReflect.Descriptor instead.
func (*GetUserERC20WalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserERC20WalletResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetUserERC20WalletResponse) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *GetUserERC20WalletResponse) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

func (x *GetUserERC20WalletResponse) GetTokenData() []*ERC20TokenData {
	if x != nil {
		return x.TokenData
	}
	return nil
}

type GetUserERC1155WalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string     `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress string     `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient    GameClient `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
}

func (x *GetUserERC1155WalletRequest) Reset() {
	*x = GetUserERC1155WalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserERC1155WalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserERC1155WalletRequest) ProtoMessage() {}

func (x *GetUserERC1155WalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserERC1155WalletRequest.ProtoReflect.Descriptor instead.
func (*GetUserERC1155WalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserERC1155WalletRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetUserERC1155WalletRequest) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *GetUserERC1155WalletRequest) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

type GetUserERC1155WalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     string     `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PublicAddress string     `protobuf:"bytes,2,opt,name=PublicAddress,proto3" json:"PublicAddress,omitempty"`
	GameClient    GameClient `protobuf:"varint,3,opt,name=GameClient,proto3,enum=GameClient" json:"GameClient,omitempty"`
	Ids           []int64    `protobuf:"varint,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	Amounts       []int64    `protobuf:"varint,5,rep,packed,name=Amounts,proto3" json:"Amounts,omitempty"`
}

func (x *GetUserERC1155WalletResponse) Reset() {
	*x = GetUserERC1155WalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserERC1155WalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserERC1155WalletResponse) ProtoMessage() {}

func (x *GetUserERC1155WalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserERC1155WalletResponse.ProtoReflect.Descriptor instead.
func (*GetUserERC1155WalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserERC1155WalletResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetUserERC1155WalletResponse) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *GetUserERC1155WalletResponse) GetGameClient() GameClient {
	if x != nil {
		return x.GameClient
	}
	return GameClient_NecoFishing
}

func (x *GetUserERC1155WalletResponse) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetUserERC1155WalletResponse) GetAmounts() []int64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type ERC20TokenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   ERC20Token `protobuf:"varint,1,opt,name=Token,proto3,enum=ERC20Token" json:"Token,omitempty"`
	Balance string     `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *ERC20TokenData) Reset() {
	*x = ERC20TokenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_center_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TokenData) ProtoMessage() {}

func (x *ERC20TokenData) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_center_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TokenData.ProtoReflect.Descriptor instead.
func (*ERC20TokenData) Descriptor() ([]byte, []int) {
	return file_wallet_center_proto_rawDescGZIP(), []int{8}
}

func (x *ERC20TokenData) GetToken() ERC20Token {
	if x != nil {
		return x.Token
	}
	return ERC20Token_NFISH
}

func (x *ERC20TokenData) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

var File_wallet_center_proto protoreflect.FileDescriptor

var file_wallet_center_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x02, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x31, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x45, 0x52, 0x43, 0x32, 0x30,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x45, 0x52, 0x43, 0x32, 0x30,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0xbd, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a,
	0x0d, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52,
	0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0d, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52,
	0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43,
	0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31,
	0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0xbb, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43,
	0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x4d, 0x0a, 0x0e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2a, 0x2b,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b,
	0x4e, 0x65, 0x63, 0x6f, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x4e, 0x65, 0x63, 0x6f, 0x4c, 0x61, 0x6e, 0x64, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x0a, 0x45,
	0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x46, 0x49,
	0x53, 0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x55, 0x53, 0x44, 0x10, 0x01, 0x2a, 0x44,
	0x0a, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x10, 0x04, 0x2a, 0x34, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x32, 0xf4, 0x02, 0x0a, 0x10, 0x4e,
	0x65, 0x63, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x58, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43,
	0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x1a, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x32, 0x30, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31,
	0x31, 0x35, 0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35,
	0x35, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_wallet_center_proto_rawDescOnce sync.Once
	file_wallet_center_proto_rawDescData = file_wallet_center_proto_rawDesc
)

func file_wallet_center_proto_rawDescGZIP() []byte {
	file_wallet_center_proto_rawDescOnce.Do(func() {
		file_wallet_center_proto_rawDescData = protoimpl.X.CompressGZIP(file_wallet_center_proto_rawDescData)
	})
	return file_wallet_center_proto_rawDescData
}

var file_wallet_center_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_wallet_center_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_wallet_center_proto_goTypes = []interface{}{
	(GameClient)(0),                         // 0: GameClient
	(ERC20Token)(0),                         // 1: ERC20Token
	(WalletActionType)(0),                   // 2: WalletActionType
	(ActionStatus)(0),                       // 3: ActionStatus
	(*UpdateUserERC20WalletRequest)(nil),    // 4: UpdateUserERC20WalletRequest
	(*UpdateUserERC20WalletResponse)(nil),   // 5: UpdateUserERC20WalletResponse
	(*UpdateUserERC1155WalletRequest)(nil),  // 6: UpdateUserERC1155WalletRequest
	(*UpdateUserERC1155WalletResponse)(nil), // 7: UpdateUserERC1155WalletResponse
	(*GetUserERC20WalletRequest)(nil),       // 8: GetUserERC20WalletRequest
	(*GetUserERC20WalletResponse)(nil),      // 9: GetUserERC20WalletResponse
	(*GetUserERC1155WalletRequest)(nil),     // 10: GetUserERC1155WalletRequest
	(*GetUserERC1155WalletResponse)(nil),    // 11: GetUserERC1155WalletResponse
	(*ERC20TokenData)(nil),                  // 12: ERC20TokenData
}
var file_wallet_center_proto_depIdxs = []int32{
	0,  // 0: UpdateUserERC20WalletRequest.GameClient:type_name -> GameClient
	2,  // 1: UpdateUserERC20WalletRequest.ActionType:type_name -> WalletActionType
	1,  // 2: UpdateUserERC20WalletRequest.Token:type_name -> ERC20Token
	3,  // 3: UpdateUserERC20WalletRequest.Status:type_name -> ActionStatus
	3,  // 4: UpdateUserERC20WalletResponse.ActionStatus:type_name -> ActionStatus
	9,  // 5: UpdateUserERC20WalletResponse.ERC20Wallet:type_name -> GetUserERC20WalletResponse
	0,  // 6: UpdateUserERC1155WalletRequest.GameClient:type_name -> GameClient
	2,  // 7: UpdateUserERC1155WalletRequest.ActionType:type_name -> WalletActionType
	3,  // 8: UpdateUserERC1155WalletRequest.Status:type_name -> ActionStatus
	3,  // 9: UpdateUserERC1155WalletResponse.ActionStatus:type_name -> ActionStatus
	11, // 10: UpdateUserERC1155WalletResponse.ERC1155Wallet:type_name -> GetUserERC1155WalletResponse
	0,  // 11: GetUserERC20WalletRequest.GameClient:type_name -> GameClient
	0,  // 12: GetUserERC20WalletResponse.GameClient:type_name -> GameClient
	12, // 13: GetUserERC20WalletResponse.TokenData:type_name -> ERC20TokenData
	0,  // 14: GetUserERC1155WalletRequest.GameClient:type_name -> GameClient
	0,  // 15: GetUserERC1155WalletResponse.GameClient:type_name -> GameClient
	1,  // 16: ERC20TokenData.Token:type_name -> ERC20Token
	4,  // 17: NecoWalletCenter.UpdateUserERC20Wallet:input_type -> UpdateUserERC20WalletRequest
	6,  // 18: NecoWalletCenter.UpdateUserERC1155Wallet:input_type -> UpdateUserERC1155WalletRequest
	8,  // 19: NecoWalletCenter.GetUserERC20Wallet:input_type -> GetUserERC20WalletRequest
	10, // 20: NecoWalletCenter.GetUserERC1155Wallet:input_type -> GetUserERC1155WalletRequest
	5,  // 21: NecoWalletCenter.UpdateUserERC20Wallet:output_type -> UpdateUserERC20WalletResponse
	7,  // 22: NecoWalletCenter.UpdateUserERC1155Wallet:output_type -> UpdateUserERC1155WalletResponse
	9,  // 23: NecoWalletCenter.GetUserERC20Wallet:output_type -> GetUserERC20WalletResponse
	11, // 24: NecoWalletCenter.GetUserERC1155Wallet:output_type -> GetUserERC1155WalletResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_wallet_center_proto_init() }
func file_wallet_center_proto_init() {
	if File_wallet_center_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wallet_center_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserERC20WalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserERC20WalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserERC1155WalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserERC1155WalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserERC20WalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserERC20WalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserERC1155WalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserERC1155WalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_center_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ERC20TokenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wallet_center_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_center_proto_goTypes,
		DependencyIndexes: file_wallet_center_proto_depIdxs,
		EnumInfos:         file_wallet_center_proto_enumTypes,
		MessageInfos:      file_wallet_center_proto_msgTypes,
	}.Build()
	File_wallet_center_proto = out.File
	file_wallet_center_proto_rawDesc = nil
	file_wallet_center_proto_goTypes = nil
	file_wallet_center_proto_depIdxs = nil
}
